
@inherits LayoutComponentBase
@implements IDisposable
@inject NavigationManager NavigationManager
@inject IProductService ProductService
@inject IShoppingCartService ShoppingCartService
@inject ICartService CartService
@inject IManageCartItemsLocalStorageService ManageCartItemsLocalStorageService
<div class="page">
    <div class="sidebar">
        <NavMenu />       
    </div>
    
    <main>
        <LoginDisplay></LoginDisplay>
        <div class="top-row px-4 float-end bg-transparent border-0">
            <NavLink type="button" class="nav-link" href="ShoppingCart">
                <FluentIcon Value="@(new Icons.Filled.Size24.Cart())" Color="@Color.Neutral" />              
                    <span class="position-absolute  translate-middle badge rounded-pill bg-danger">
                        @shoppingCartItemsCount
                        <span class="visually-hidden">unread messages</span>
                    </span>                
            </NavLink>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
   
    private int shoppingCartItemsCount = 0;
    private IEnumerable<CartItemDto> ShoppingCartItems { get; set; }

    protected override async Task OnInitializedAsync()
    { 
        ShoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
        // ShoppingCartItems = await ManageCartItemsLocalStorageService.GetCollection();
        

    }

    private void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemsCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        ShoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}